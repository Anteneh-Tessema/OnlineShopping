{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/categoryReducers.js","constants/categoryConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/categoryActions.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","validatiors/formValidators.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","constants/usStatesConstants.js","screens/ShippingScreen.js","screens/BillingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/AdminOrderListScreen.js","screens/CategoryHomeScreen.js","screens/ReportScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","content","pages","totalPages","page","number","error","categoryList","categories","categoryProductList","vendorProductList","productDetails","product","success","productDelete","productCreate","productUpdate","productReport","report","cart","cartItems","shippingAddress","item","existItem","find","x","productId","map","filter","billingAddress","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderListMy","orders","orderList","vendorOrderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","listCategory","dispatch","a","axios","get","data","response","message","SearchBox","history","useDispatch","useState","keyword","setKeyword","category","setCategory","useSelector","useEffect","Form","Group","controlId","Label","Control","as","size","onChange","e","target","options","selectedIndex","disabled","value","c","key","id","name","onSubmit","preventDefault","trim","push","inline","placeholder","className","Button","variant","logout","removeItem","getUserDetails","getState","config","headers","Authorization","token","Header","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","username","Item","onClick","role","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","Img","src","image","Body","Title","Text","price","Message","children","Alert","Loader","Spinner","animation","width","height","margin","display","Paginate","isAdmin","Pagination","Array","keys","active","Meta","description","keywords","Helmet","listProducts","pageNumber","listProductDetails","updateProduct","put","HomeScreen","match","params","cat","sm","md","lg","xl","ProductScreen","qty","setQty","Image","alt","fluid","ListGroup","countInStock","addToCart","quantity","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","usernameValidator","nameValidator","emailValidator","email","passwordValidator","password","LoginScreen","setUsername","setPassword","usernameError","setUsernameError","redirect","post","login","required","setUsernameValidator","RegisterScreen","firstname","setFirstName","lastname","setLastName","setEmail","confirmPassword","setConfirmPassword","setRole","setMessage","nameError","formErrors","formChecks","idx","class","hidden","some","register","Check","label","listMyOrders","ProfileScreen","loadingOrders","errorOrders","updateUserProfile","Table","striped","bordered","hover","responsive","_id","order_created","total","status","CheckoutSteps","step1","step2","step3","step4","step5","stateNames","ShippingScreen","address","setAddress","setStateAddress","city","setCity","postalCode","setPostalCode","country","setCountry","selected","BillingScreen","PaymentScreen","usePaymentInputs","meta","getCardImageProps","getCardNumberProps","getExpiryDateProps","getCVCProps","method","setMethod","cardNumber","setCardNumber","expiryDate","setExpiryDate","cvc","setCVC","console","log","checked","images","cardType","displayName","isTouched","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","totalPrice","index","createOrder","OrderScreen","orderId","listItemDTO","href","payment","slice","shippingCost","tax","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","UserEditScreen","userId","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","listVendorProducts","toLowerCase","deleteProduct","Badge","pill","ProductEditScreen","setName","categoryId","setCategoryId","setPrice","setImage","setCountInStock","setDescription","setActive","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","File","custom","ButtonGroup","toggle","ToggleButton","OrderListScreen","AdminOrderListScreen","CategoryHomeScreen","catId","productListByCategory","listProductsByCategory","ReportScreen","from","setFrom","setTo","App","path","component","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.019ae7fe.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n  vendorProductListReducer,\r\n  categoryProductListReducer,\r\n  productReportsReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  vendorOrderListReducer,\r\n} from './reducers/orderReducers'\r\nimport { categoryListReducer } from './reducers/categoryReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  categoryList: categoryListReducer,\r\n  categoryProductList: categoryProductListReducer,\r\n  vendorProductList: vendorProductListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReport: productReportsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  vendorOrderList: vendorOrderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst billingAddressFromStorage = localStorage.getItem('billingAddress')\r\n  ? JSON.parse(localStorage.getItem('billingAddress'))\r\n  : {}\r\n\r\nconst paymentMethodFrontStorage = localStorage.getItem('paymentMethod')\r\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    billingAddress: billingAddressFromStorage,\r\n    paymentMethod: paymentMethodFrontStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  VENDOR_PRODUCT_LIST_REQUEST,\r\n  VENDOR_PRODUCT_LIST_SUCCESS,\r\n  VENDOR_PRODUCT_LIST_FAIL,\r\n  CATEGORY_PRODUCT_LIST_REQUEST,\r\n  CATEGORY_PRODUCT_LIST_SUCCESS,\r\n  CATEGORY_PRODUCT_LIST_FAIL,\r\n  PRODUCT_REPORT_REQUEST,\r\n  PRODUCT_REPORT_SUCCESS,\r\n  PRODUCT_REPORT_FAIL,\r\n  PRODUCT_REPORT_RESET,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.content,\r\n        pages: action.payload.totalPages,\r\n        page: action.payload.number,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const categoryProductListReducer = (\r\n  state = { products: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CATEGORY_PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case CATEGORY_PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.content,\r\n        pages: action.payload.totalPages,\r\n        page: action.payload.number,\r\n      }\r\n    case CATEGORY_PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const vendorProductListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case VENDOR_PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case VENDOR_PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.content,\r\n        pages: action.payload.totalPages,\r\n        page: action.payload.number,\r\n      }\r\n    case VENDOR_PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReportsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_REPORT_REQUEST:\r\n      return { ...state, loading: true }\r\n    case PRODUCT_REPORT_SUCCESS:\r\n      return { loading: false, success: true, report: action.payload }\r\n    case PRODUCT_REPORT_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_REPORT_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const CATEGORY_PRODUCT_LIST_REQUEST = 'CATEGORY_PRODUCT_LIST_REQUEST'\r\nexport const CATEGORY_PRODUCT_LIST_SUCCESS = 'CATEGORY_PRODUCT_LIST_SUCCESS'\r\nexport const CATEGORY_PRODUCT_LIST_FAIL = 'CATEGORY_PRODUCT_LIST_FAIL'\r\n\r\nexport const VENDOR_PRODUCT_LIST_REQUEST = 'VENDOR_PRODUCT_LIST_REQUEST'\r\nexport const VENDOR_PRODUCT_LIST_SUCCESS = 'VENDOR_PRODUCT_LIST_SUCCESS'\r\nexport const VENDOR_PRODUCT_LIST_FAIL = 'VENDOR_PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_REPORT_REQUEST = 'PRODUCT_REPORT_REQUEST'\r\nexport const PRODUCT_REPORT_SUCCESS = 'PRODUCT_REPORT_SUCCESS'\r\nexport const PRODUCT_REPORT_FAIL = 'PRODUCT_REPORT_FAIL'\r\nexport const PRODUCT_REPORT_RESET = 'PRODUCT_REPORT_RESET'\r\n","import {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_CREATE_RESET,\r\n  CATEGORY_CREATE_FAIL,\r\n  CATEGORY_CREATE_SUCCESS,\r\n  CATEGORY_CREATE_REQUEST,\r\n  CATEGORY_UPDATE_REQUEST,\r\n  CATEGORY_UPDATE_SUCCESS,\r\n  CATEGORY_UPDATE_FAIL,\r\n  CATEGORY_UPDATE_RESET,\r\n} from '../constants/categoryConstants'\r\n\r\nexport const categoryListReducer = (state = { categories: [] }, action) => {\r\n  switch (action.type) {\r\n    case CATEGORY_LIST_REQUEST:\r\n      return { loading: true, categories: [] }\r\n    case CATEGORY_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        categories: action.payload,\r\n      }\r\n    case CATEGORY_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CATEGORY_LIST_REQUEST = 'CATEGORY_LIST_REQUEST'\r\nexport const CATEGORY_LIST_SUCCESS = 'CATEGORY_LIST_SUCCESS'\r\nexport const CATEGORY_LIST_FAIL = 'CATEGORY_LIST_FAIL'\r\nexport const CATEGORY_LIST_RESET = 'CATEGORY_LIST_RESET'\r\n\r\nexport const CATEGORY_CREATE_REQUEST = 'CATEGORY_CREATE_REQUEST'\r\nexport const CATEGORY_CREATE_SUCCESS = 'CATEGORY_CREATE_SUCCESS'\r\nexport const CATEGORY_CREATE_FAIL = 'CATEGORY_CREATE_FAIL'\r\nexport const CATEGORY_CREATE_RESET = 'CATEGORY_CREATE_RESET'\r\n\r\nexport const CATEGORY_UPDATE_REQUEST = 'CATEGORY_UPDATE_REQUEST'\r\nexport const CATEGORY_UPDATE_SUCCESS = 'CATEGORY_UPDATE_SUCCESS'\r\nexport const CATEGORY_UPDATE_FAIL = 'CATEGORY_UPDATE_FAIL'\r\nexport const CATEGORY_UPDATE_RESET = 'CATEGORY_UPDATE_RESET'\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_BILLING_ADDRESS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find(\r\n        (x) => x.productId === item.productId\r\n      )\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.productId === existItem.productId ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (x) => x.productId !== action.payload\r\n        ),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n\r\n    case CART_SAVE_BILLING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        billingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_BILLING_ADDRESS = 'CART_SAVE_BILLING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_LOGIN_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGIN_RESET:\r\n      return {}\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGIN_RESET = 'USER_LOGIN_RESET'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  VENDOR_ORDER_LIST_REQUEST,\r\n  VENDOR_ORDER_LIST_FAIL,\r\n  VENDOR_ORDER_LIST_SUCCESS,\r\n  VENDOR_ORDER_LIST_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n\r\n    case ORDER_CREATE_RESET:\r\n      return {\r\n        state: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const vendorOrderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case VENDOR_ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case VENDOR_ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case VENDOR_ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case VENDOR_ORDER_LIST_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const VENDOR_ORDER_LIST_REQUEST = 'VENDOR_ORDER_LIST_REQUEST'\r\nexport const VENDOR_ORDER_LIST_SUCCESS = 'VENDOR_ORDER_LIST_SUCCESS'\r\nexport const VENDOR_ORDER_LIST_FAIL = 'VENDOR_ORDER_LIST_FAIL'\r\nexport const VENDOR_ORDER_LIST_RESET = 'VENDOR_ORDER_LIST_RESET'\r\n","import axios from 'axios'\r\nimport {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_DELETE_SUCCESS,\r\n  CATEGORY_DELETE_REQUEST,\r\n  CATEGORY_DELETE_FAIL,\r\n  CATEGORY_CREATE_REQUEST,\r\n  CATEGORY_CREATE_SUCCESS,\r\n  CATEGORY_CREATE_FAIL,\r\n  CATEGORY_UPDATE_REQUEST,\r\n  CATEGORY_UPDATE_SUCCESS,\r\n  CATEGORY_UPDATE_FAIL,\r\n} from '../constants/categoryConstants'\r\n\r\nexport const listCategory = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/category`)\r\n\r\n    dispatch({\r\n      type: CATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, NavDropdown } from 'react-bootstrap'\r\nimport { listCategory } from '../actions/categoryActions'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const [keyword, setKeyword] = useState('')\r\n  const [category, setCategory] = useState('')\r\n\r\n  //TODO Categories\r\n  const categoryList = useSelector((state) => state.categoryList)\r\n  const { categories } = categoryList\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategory())\r\n  }, [dispatch])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}/category/${category ? category : 0}`)\r\n    } else {\r\n      history.push(`/category/${category ? category : 0}`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form.Group controlId='category'>\r\n        <Form.Label></Form.Label>\r\n        <Form.Control\r\n          as='select'\r\n          size='sm'\r\n          onChange={(e) => setCategory(e.target.options.selectedIndex)}\r\n        >\r\n          <option disabled value=''>\r\n            Select Category\r\n          </option>\r\n          {categories &&\r\n            categories.map((c) => <option key={c.id}>{c.name}</option>)}\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form onSubmit={submitHandler} inline>\r\n        <Form.Control\r\n          type='text'\r\n          name='q'\r\n          onChange={(e) => setKeyword(e.target.value)}\r\n          placeholder='Search Products...'\r\n          className='mr-sm-2 ml-sm-5'\r\n        ></Form.Control>\r\n        <Button type='submit' variant='outline-success' className='p-2'>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_RESET,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      null,\r\n      {\r\n        params: {\r\n          username,\r\n          password,\r\n        },\r\n      },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (\r\n  firstname,\r\n  lastname,\r\n  email,\r\n  username,\r\n  password,\r\n  role\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/register',\r\n      { firstname, lastname, email, username, password, role },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${userInfo.id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\nimport { listCategory } from '../actions/categoryActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Online Shop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.username} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.role === 'ADMIN' && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/reports'>\r\n                    <NavDropdown.Item>Reports</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n              {userInfo && userInfo.role === 'VENDOR' && (\r\n                <NavDropdown title='Vendor' id='vendormenu'>\r\n                  <LinkContainer to='/vendor/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/vendor/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; OnlineShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Container } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card\r\n      className='my-3 p-3\r\n    rounded'\r\n    >\r\n      <Link to={`/product/${product.id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product.id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page + 1}>\r\n              {x + 1}\r\n            </Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To ProShop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electroincs',\r\n}\r\n\r\nexport default Meta\r\n","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  VENDOR_PRODUCT_LIST_REQUEST,\r\n  VENDOR_PRODUCT_LIST_FAIL,\r\n  VENDOR_PRODUCT_LIST_SUCCESS,\r\n  CATEGORY_PRODUCT_LIST_REQUEST,\r\n  CATEGORY_PRODUCT_LIST_SUCCESS,\r\n  CATEGORY_PRODUCT_LIST_FAIL,\r\n  PRODUCT_REPORT_REQUEST,\r\n  PRODUCT_REPORT_SUCCESS,\r\n  PRODUCT_REPORT_FAIL,\r\n} from '../constants/productConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductsByCategory = (\r\n  catId,\r\n  keyword = '',\r\n  pageNumber = ''\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products/categories/${catId}?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listVendorProducts = (id, pageNumber = '') => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: VENDOR_PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products/vendors/${id}?pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: VENDOR_PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: VENDOR_PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/products`, product, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductsReport = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_REPORT_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/reports/products`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_REPORT_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_REPORT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  CardGroup,\r\n  Container,\r\n} from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\nimport { listCategory } from '../actions/categoryActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const categoryList = useSelector((state) => state.categoryList)\r\n  const { categories } = categoryList\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategory())\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n\r\n      <h1>Latest Products</h1>\r\n\r\n      <Navbar bg='light'>\r\n        <Nav className='mr-auto'>\r\n          <NavDropdown title='Browse Categories'>\r\n            {categories &&\r\n              categories.map((cat) => (\r\n                <NavDropdown.Item key={cat.id}>\r\n                  <NavLink to={`/search/@/category/${cat.id}`}>\r\n                    {cat.name}\r\n                  </NavLink>\r\n                </NavDropdown.Item>\r\n              ))}\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Container>\r\n            <Row>\r\n              {products &&\r\n                products.map((product) => (\r\n                  <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\r\n                    <Product product={product} />\r\n                  </Col>\r\n                ))}\r\n            </Row>\r\n            <Paginate\r\n              pages={pages}\r\n              page={page}\r\n              keyword={keyword ? keyword : ''}\r\n            />\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails } from '../actions/productActions'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                {product && product.category ? (\r\n                  <ListGroup.Item>\r\n                    <Link to={`/categories/${product.category.id}`}>\r\n                      <Card.Text>{product.category.name}</Card.Text>\r\n                    </Link>\r\n                  </ListGroup.Item>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_BILLING_ADDRESS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      productId: data.id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      quantity: qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const saveBillingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_BILLING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('billingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const quantity = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, quantity))\r\n    }\r\n  }, [dispatch, productId, quantity])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    if (userInfo && userInfo.role === 'CLIENT') {\r\n      history.push('/login?redirect=shipping')\r\n    }\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.productId}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.productId}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.quantity}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.productId, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.productId)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal (\r\n                {cartItems.reduce((acc, item) => acc + item.quantity, 0)}) items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.quantity * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            {userInfo && userInfo.role !== 'CLIENT' ? (\r\n              <Message>\r\n                Please login from a client account <Link to='/'>Go Back</Link>\r\n              </Message>\r\n            ) : (\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  Proceed To Checkout\r\n                </Button>\r\n              </ListGroup.Item>\r\n            )}\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={8}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React from 'react'\r\n\r\nexport const usernameValidator = (username) => {\r\n  var letters = /^[0-9a-zA-Z]+$/\r\n  if (username.match(letters)) return true\r\n  return false\r\n}\r\n\r\nexport const nameValidator = (name) => {\r\n  var letters = /^[a-zA-Z]+$/\r\n  if (name.match(letters)) return true\r\n  return false\r\n}\r\n\r\nexport const emailValidator = (email) => {\r\n  var letters = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  if (email.match(letters)) return true\r\n  return false\r\n}\r\n\r\nexport const passwordValidator = (password) => {\r\n  var letters = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{6,15}$/\r\n  if (password.match(letters)) return true\r\n  return false\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\nimport { USER_LOGIN_RESET } from '../constants/userConstants'\r\nimport { usernameValidator } from '../validatiors/formValidators'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [usernameError, setUsernameError] = useState(false)\r\n  const [formError, setFormError] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    } else {\r\n      dispatch({ type: USER_LOGIN_RESET })\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(username, password))\r\n  }\r\n\r\n  const setUsernameValidator = (username) => {\r\n    if (username.trim() === '') {\r\n      setUsername('')\r\n      setUsernameError(false)\r\n    } else if (usernameValidator(username)) {\r\n      setUsername(username)\r\n      setUsernameError(false)\r\n    } else setUsernameError(true)\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter Usernmae'\r\n            value={username}\r\n            required\r\n            onChange={(e) => setUsernameValidator(e.target.value)}\r\n          ></Form.Control>\r\n          {usernameError && (\r\n            <Message variant='danger'>\r\n              Only alphanumeric characters allowed\r\n            </Message>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\nimport {\r\n  emailValidator,\r\n  nameValidator,\r\n  passwordValidator,\r\n  usernameValidator,\r\n} from '../validatiors/formValidators'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [firstname, setFirstName] = useState('')\r\n  const [lastname, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [role, setRole] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [nameError, setNameError] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  const formErrors = [\r\n    'Firstname',\r\n    'Lastname',\r\n    'Email',\r\n    'Username',\r\n    'Password',\r\n    'Confirm Password',\r\n    'Role',\r\n  ]\r\n  const formChecks = [false, false, false, false, false, false, false]\r\n\r\n  if (nameValidator(firstname)) {\r\n    formChecks[0] = true\r\n  }\r\n  if (nameValidator(lastname)) {\r\n    formChecks[1] = true\r\n  }\r\n  if (usernameValidator(username)) {\r\n    formChecks[3] = true\r\n  }\r\n  if (emailValidator(email)) {\r\n    formChecks[2] = true\r\n  }\r\n  if (passwordValidator(password)) {\r\n    formChecks[4] = true\r\n  }\r\n  if (confirmPassword.trim() && password === confirmPassword) {\r\n    formChecks[5] = true\r\n  }\r\n  if (role) {\r\n    formChecks[6] = true\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else if (\r\n      !formChecks.some((e) => {\r\n        return e === false\r\n      })\r\n    ) {\r\n      dispatch(register(firstname, lastname, email, username, password, role))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      <Row>\r\n        <Col>\r\n          <Card\r\n            className='my-3 w-50 p-3\"\r\n    rounded'\r\n          >\r\n            <ListGroup>\r\n              {formErrors &&\r\n                formErrors.map((e, idx) => (\r\n                  <ListGroup.Item variant='success' disabled={!formChecks[idx]}>\r\n                    {e} <i class='fas fa-check' hidden={!formChecks[idx]} />\r\n                    <i class='fas fa-times' hidden={formChecks[idx]} />\r\n                  </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Card\r\n            className='my-3 p-3\r\n    rounded'\r\n          >\r\n            {' '}\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='firstname'>\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control\r\n                  type='name'\r\n                  placeholder='Enter Firstname'\r\n                  value={firstname}\r\n                  required\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                ></Form.Control>\r\n                {nameError && <Message variant='danger'>Invalid name</Message>}\r\n              </Form.Group>\r\n              <Form.Group controlId='lastname'>\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                  type='name'\r\n                  placeholder='Enter Last Name'\r\n                  value={lastname}\r\n                  required\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                ></Form.Control>\r\n                {nameError && <Message variant='danger'>Invalid name</Message>}\r\n              </Form.Group>\r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Enter email'\r\n                  value={email}\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n                {nameError && <Message variant='danger'>Invalid name</Message>}\r\n              </Form.Group>\r\n              <Form.Group controlId='username'>\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Username'\r\n                  value={username}\r\n                  required\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                ></Form.Control>\r\n                {nameError && <Message variant='danger'>Invalid name</Message>}\r\n              </Form.Group>\r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Password Address</Form.Label>\r\n                <Form.Control\r\n                  type='password'\r\n                  placeholder='Enter password'\r\n                  value={password}\r\n                  required\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n                {!passwordValidator(password) && (\r\n                  <Message variant='info'>\r\n                    <p>6 to 15 characters</p>\r\n                    <p>At least one lowercase</p>\r\n                    <p>At least one uppercase </p>\r\n                    <p>At least digit</p>\r\n                    <p>At least one special character</p>\r\n                  </Message>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='confirmPassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type='password'\r\n                  placeholder='Confirm password'\r\n                  value={confirmPassword}\r\n                  required\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n                {nameError && <Message variant='danger'>Invalid name</Message>}\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label as='legend'>Select Account Type</Form.Label>\r\n                <Col>\r\n                  <Form.Check\r\n                    type='radio'\r\n                    label='Vendor'\r\n                    id='vendor'\r\n                    name='role'\r\n                    value='VENDOR'\r\n                    required\r\n                    onChange={(e) => setRole(e.target.value)}\r\n                  ></Form.Check>\r\n                  <Form.Check\r\n                    type='radio'\r\n                    label='Client'\r\n                    id='client'\r\n                    name='role'\r\n                    value='CLIENT'\r\n                    required\r\n                    onChange={(e) => setRole(e.target.value)}\r\n                  ></Form.Check>\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'>\r\n                Register\r\n              </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n              <Col>\r\n                Have an Account?{' '}\r\n                <Link to={redirect ? `/login?redirect=${redirect}` : '/signin'}>\r\n                  Login\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import axios from 'axios'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  VENDOR_ORDER_LIST_REQUEST,\r\n  VENDOR_ORDER_LIST_SUCCESS,\r\n  VENDOR_ORDER_LIST_FAIL,\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listVendorOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: VENDOR_ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/vendors`, config)\r\n\r\n    dispatch({\r\n      type: VENDOR_ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: VENDOR_ORDER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col, ListGroup, Card } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport {\r\n  emailValidator,\r\n  nameValidator,\r\n  passwordValidator,\r\n  usernameValidator,\r\n} from '../validatiors/formValidators'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [firstname, setFirstName] = useState('')\r\n  const [lastname, setLastName] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  const formErrors = [\r\n    'Firstname',\r\n    'Lastname',\r\n    'Email',\r\n    'Username',\r\n    'Password',\r\n    'Confirm Password',\r\n  ]\r\n  const formChecks = [false, false, false, false, false, false]\r\n\r\n  if (nameValidator(firstname)) {\r\n    formChecks[0] = true\r\n  }\r\n  if (nameValidator(lastname)) {\r\n    formChecks[1] = true\r\n  }\r\n  if (usernameValidator(username)) {\r\n    formChecks[3] = true\r\n  }\r\n  if (emailValidator(email)) {\r\n    formChecks[2] = true\r\n  }\r\n  if (passwordValidator(password)) {\r\n    formChecks[4] = true\r\n  }\r\n  if (\r\n    passwordValidator(password) &&\r\n    confirmPassword.trim() &&\r\n    password === confirmPassword\r\n  ) {\r\n    formChecks[5] = true\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(listMyOrders())\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.username) {\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setFirstName(user.firstname)\r\n        setLastName(user.lastname)\r\n        setUsername(user.username)\r\n        setEmail(user.email)\r\n        setPassword(user.password)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else if (\r\n      !formChecks.some((e) => {\r\n        return e === false\r\n      })\r\n    ) {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user.id,\r\n          firstname,\r\n          lastname,\r\n          username,\r\n          email,\r\n          password,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <ListGroup>\r\n          {userInfo &&\r\n            formErrors &&\r\n            formErrors.map((e, idx) => (\r\n              <ListGroup.Item variant='success' disabled={!formChecks[idx]}>\r\n                {e} <i class='fas fa-check' hidden={!formChecks[idx]} />\r\n                <i class='fas fa-times' hidden={formChecks[idx]} />\r\n              </ListGroup.Item>\r\n            ))}\r\n        </ListGroup>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='firstname'>\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Firstname'\r\n                value={firstname}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='lastname'>\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Lastname'\r\n                value={lastname}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='username'>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Username'\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n              {!passwordValidator(password) && (\r\n                <Message variant='info'>\r\n                  <p>6 to 15 characters</p>\r\n                  <p>At least one lowercase</p>\r\n                  <p>At least one uppercase </p>\r\n                  <p>At least digit</p>\r\n                  <p>At least one special character</p>\r\n                </Message>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>STATUS</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order.id}</td>\r\n                  <td>{order.order_created.split('T')[0]}</td>\r\n                  <td>{order.total}</td>\r\n                  <td>\r\n                    {order.status === 'PAID' ? (\r\n                      <Message variant='success'>Yes</Message>\r\n                    ) : (\r\n                      <Message variant='danger'>No</Message>\r\n                    )}\r\n                  </td>\r\n                  <td>{order.status}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order.id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4, step5 }) => {\r\n  return (\r\n    <Nav className='justify-content-center' variant='pills'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/billing'>\r\n            <Nav.Link>Billing</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Billing</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step5 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","export const stateNames = [\r\n  'Alabama',\r\n  'Alaska',\r\n  'Arizona',\r\n  'Arkansas',\r\n  'California',\r\n  'Colorado',\r\n  'Connecticut',\r\n  'Delaware',\r\n  'Florida',\r\n  'Georgia',\r\n  'Hawaii',\r\n  'Idaho',\r\n  'Illinois',\r\n  'Indiana',\r\n  'Iowa',\r\n  'Kansas',\r\n  'Kentucky',\r\n  'Louisiana',\r\n  'Maine',\r\n  'Maryland',\r\n  'Massachusetts',\r\n  'Michigan',\r\n  'Minnesota',\r\n  'Mississippi',\r\n  'Missouri',\r\n  'Montana',\r\n  'Nebraska',\r\n  'Nevada',\r\n  'New Hampshire',\r\n  'New Jersey',\r\n  'New Mexico',\r\n  'New York',\r\n  'North Carolina',\r\n  'North Dakota',\r\n  'Ohio',\r\n  'Oklahoma',\r\n  'Oregon',\r\n  'Pennsylvania',\r\n  'Rhode Island',\r\n  'South Carolina',\r\n  'South Dakota',\r\n  'Tennessee',\r\n  'Texas',\r\n  'Utah',\r\n  'Vermont',\r\n  'Virginia',\r\n  'Washington',\r\n  'West Virginia',\r\n  'Wisconsin',\r\n  'Wyoming',\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport SelectUSState from 'react-select-us-states'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport { stateNames } from '../constants/usStatesConstants'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [firstname, setFirstName] = useState(shippingAddress.firstname)\r\n  const [lastname, setLastName] = useState(shippingAddress.lastname)\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [state, setStateAddress] = useState(shippingAddress.state)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login?redirect=shipping')\r\n    }\r\n    if (userInfo && userInfo.role !== 'CLIENT') {\r\n      history.push('/')\r\n    }\r\n  }, [userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      saveShippingAddress({\r\n        firstname,\r\n        lastname,\r\n        address,\r\n        city,\r\n        state,\r\n        postalCode,\r\n        country,\r\n      })\r\n    )\r\n    history.push('/billing')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='firstname'>\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter FirstName'\r\n            value={firstname}\r\n            required\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='lastname'>\r\n          <Form.Label>Last Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter LastName'\r\n            value={lastname}\r\n            required\r\n            onChange={(e) => setLastName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='state'>\r\n          <Form.Label>State</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            size='sm'\r\n            required\r\n            onChange={(e) => setStateAddress(e.target.value)}\r\n          >\r\n            <option disabled value='' selected>\r\n              Select State\r\n            </option>\r\n            {stateNames &&\r\n              stateNames.map((c, idx) => <option key={idx}>{c}</option>)}\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport SelectUSState from 'react-select-us-states'\r\nimport { saveBillingAddress } from '../actions/cartActions'\r\nimport { stateNames } from '../constants/usStatesConstants'\r\n\r\nconst BillingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { billingAddress } = cart\r\n\r\n  const [firstname, setFirstName] = useState(billingAddress.firstname)\r\n  const [lastname, setLastName] = useState(billingAddress.lastname)\r\n  const [address, setAddress] = useState(billingAddress.address)\r\n  const [state, setStateAddress] = useState(billingAddress.state)\r\n  const [city, setCity] = useState(billingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(billingAddress.postalCode)\r\n  const [country, setCountry] = useState(billingAddress.country)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login?redirect=billing')\r\n    }\r\n    if (userInfo && userInfo.role !== 'CLIENT') {\r\n      history.push('/')\r\n    }\r\n  }, [userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      saveBillingAddress({\r\n        firstname,\r\n        lastname,\r\n        address,\r\n        city,\r\n        state,\r\n        postalCode,\r\n        country,\r\n      })\r\n    )\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Billing</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='firstname'>\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter FirstName'\r\n            value={firstname}\r\n            required\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='lastname'>\r\n          <Form.Label>Last Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter LastName'\r\n            value={lastname}\r\n            required\r\n            onChange={(e) => setLastName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='state'>\r\n          <Form.Label>State</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            size='sm'\r\n            required\r\n            onChange={(e) => setStateAddress(e.target.value)}\r\n          >\r\n            <option disabled value='' selected>\r\n              Select State\r\n            </option>\r\n            {stateNames &&\r\n              stateNames.map((c, idx) => <option key={idx}>{c}</option>)}\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default BillingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport { usePaymentInputs } from 'react-payment-inputs'\r\nimport images from 'react-payment-inputs/images'\r\nimport Message from '../components/Message'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress, paymentMethod } = cart\r\n  const {\r\n    meta,\r\n    getCardImageProps,\r\n    getCardNumberProps,\r\n    getExpiryDateProps,\r\n    getCVCProps,\r\n  } = usePaymentInputs()\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [method, setMethod] = useState('')\r\n  const [cardNumber, setCardNumber] = useState('')\r\n  const [expiryDate, setExpiryDate] = useState('')\r\n  const [cvc, setCVC] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login?redirect=payment')\r\n    }\r\n    if (userInfo && userInfo.role !== 'CLIENT') {\r\n      history.push('/')\r\n    }\r\n  }, [userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (!meta.error) {\r\n      dispatch(\r\n        savePaymentMethod({\r\n          method,\r\n          cardNumber,\r\n          expiryDate,\r\n          cvc,\r\n        })\r\n      )\r\n      history.push('/placeorder')\r\n    }\r\n    console.log('here')\r\n  }\r\n\r\n  const checkCardType = () => {\r\n    if (meta && meta.cardType) {\r\n      setMethod(meta.cardType.displayName)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='payment'>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Mastercard'\r\n              id='mastercard'\r\n              name='method'\r\n              value='Mastercard'\r\n              checked={method == 'Mastercard'}\r\n              onChange={(e) => setMethod(e.target.value)}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Visa'\r\n              id='visa'\r\n              name='method'\r\n              value='Visa'\r\n              checked={method === 'Visa'}\r\n              required\r\n              onChange={(e) => setMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Card Number</Form.Label>{' '}\r\n          <svg {...getCardImageProps({ images })} />\r\n          <Form.Control\r\n            type='number'\r\n            placeholder='Enter card Number'\r\n            required\r\n            {...getCardNumberProps({\r\n              onChange: (e) => {\r\n                setCardNumber(e.target.value)\r\n                checkCardType()\r\n              },\r\n            })}\r\n            value={cardNumber}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Expiration Date</Form.Label>\r\n          <Form.Control\r\n            type='number'\r\n            placeholder='Enter Expiration Date'\r\n            required\r\n            {...getExpiryDateProps({\r\n              onChange: (e) => setExpiryDate(e.target.value),\r\n            })}\r\n            value={expiryDate}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>CVV</Form.Label>\r\n          <Form.Control\r\n            type='number'\r\n            placeholder='Enter CVV'\r\n            {...getCVCProps({ onChange: (e) => setCVC(e.target.value) })}\r\n            value={cvc}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {meta.isTouched && meta.error ? <Message>{meta.error}</Message> : <></>}\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 25 : 10)\r\n  cart.taxPrice = addDecimals(Number((0.07 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch({ type: ORDER_CREATE_RESET })\r\n      history.push(`/order/${order.id}`)\r\n    }\r\n    if (!userInfo) {\r\n      history.push('/login?redirect=placeOrder')\r\n    }\r\n    if (userInfo && userInfo.role !== 'CLIENT') {\r\n      history.push('/')\r\n    }\r\n  }, [history, success, userInfo])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        billingAddress: cart.billingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 step5 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\r\n                {cart.shippingAddress.state} {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod.method}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.productId}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.quantity} x ${item.price} = $\r\n                          {(item.quantity * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails } from '../actions/orderActions'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.listItemDTO.reduce(\r\n        (acc, item) => acc + item.product.price * item.quantity,\r\n        0\r\n      )\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (order && userInfo && userInfo.id !== order.user.id) {\r\n      history.push('/')\r\n    }\r\n    if (!userInfo) {\r\n      history.push(`/login?redirect=order/${orderId}`)\r\n    }\r\n\r\n    if (!order || order.id != orderId) {\r\n      dispatch(getOrderDetails(orderId))\r\n    }\r\n    if (userInfo && userInfo.role === 'VENDOR') {\r\n      history.push('/')\r\n    }\r\n  }, [dispatch, orderId, order, userInfo])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order.id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.firstname}{' '}\r\n                {order.user.lastname}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Status</h2>\r\n\r\n              {order.status === 'RECEIVED' ? (\r\n                <Message variant='warning'>Received</Message>\r\n              ) : order.status === 'INPROGRESS' ? (\r\n                <Message variant='primary'>In Progress</Message>\r\n              ) : order.status === 'CANCELED' ? (\r\n                <Message variant='danger'>Cancelled</Message>\r\n              ) : order.status === 'SHIPPED' ? (\r\n                <Message variant='info'>Shipped</Message>\r\n              ) : order.status === 'DELIVERED' ? (\r\n                <Message variant='success'>Delivered</Message>\r\n              ) : order.status === 'PAID' ? (\r\n                <Message variant='primary'>Paid</Message>\r\n              ) : (\r\n                <Message> No Status Available</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.payment.method} ending in{' '}\r\n                {order.payment.cardNumber.slice(\r\n                  order.payment.cardNumber.length - 4\r\n                )}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.listItemDTO.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.listItemDTO.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.product.image}\r\n                            alt={item.product.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product.id}`}>\r\n                            {item.product.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.quantity} x ${item.product.price} = $\r\n                          {item.quantity * item.product.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.price}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingCost}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.tax}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.total}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const id = userInfo.id\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.role === 'ADMIN') {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>\r\n                  {user.firstname} {user.lastname}\r\n                </td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.role === 'ADMIN' ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {/* <LinkContainer to={`/admin/user/${user.id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer> */}\r\n                  {id !== user.id ? (\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(user.id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.username || user.id != userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setUsername(user.username)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ id: userId, username, email }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Username'\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Badge, Image, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n  listVendorProducts,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  const productList = useSelector((state) => state.productList)\r\n  const vendorProductList = useSelector((state) => state.vendorProductList)\r\n\r\n  let loading,\r\n    error,\r\n    products,\r\n    page,\r\n    pages = ''\r\n\r\n  if (userInfo && userInfo.role === 'VENDOR') {\r\n    ;({ loading, error, products, page, pages } = vendorProductList)\r\n  } else {\r\n    ;({ loading, error, products, page, pages } = productList)\r\n  }\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n    if (userInfo && userInfo.role === 'VENDOR') {\r\n      dispatch(listVendorProducts(userInfo.id, pageNumber))\r\n\r\n      if (successCreate) {\r\n        history.push(\r\n          `/${userInfo.role.toLowerCase()}/product/${createdProduct.id}/edit`\r\n        )\r\n      }\r\n    } else if (userInfo && userInfo.role === 'ADMIN') {\r\n      dispatch(listProducts('', pageNumber))\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        {userInfo && userInfo.role === 'VENDOR' ? (\r\n          <Col className='text-right'>\r\n            <Button className='my-3' onClick={createProductHandler}>\r\n              <i className='fas fa-plus'></i> Create Product\r\n            </Button>\r\n          </Col>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>CATEGORY</th>\r\n                <th>PRICE</th>\r\n                <th>IMAGE</th>\r\n                <th>DESCRIPTION</th>\r\n                <th>STATUS</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product.id}>\r\n                  <td>{product.id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.category.name}</td>\r\n                  <td>${product.price}</td>\r\n\r\n                  <td>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Image\r\n                          src={product.image}\r\n                          alt={product.name}\r\n                          fluid\r\n                          rounded\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </td>\r\n                  <td>{product.description}</td>\r\n                  <td>\r\n                    {product.active ? (\r\n                      <Badge pill variant='success'>\r\n                        Active\r\n                      </Badge>\r\n                    ) : (\r\n                      <Badge pill variant='danger'>\r\n                        Inactive\r\n                      </Badge>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer\r\n                      to={`/${\r\n                        userInfo && userInfo.role.toLowerCase()\r\n                      }/product/${product.id}/edit`}\r\n                    >\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product.id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            isAdmin={\r\n              userInfo &&\r\n              (userInfo.role === 'ADMIN' || userInfo.role === 'VENDOR')\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Col, ButtonGroup, ToggleButton } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport { listCategory } from '../actions/categoryActions'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [categoryId, setCategoryId] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [active, setActive] = useState(false)\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const categoryList = useSelector((state) => state.categoryList)\r\n  const { categories } = categoryList\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategory())\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push(`/${userInfo.role.toLowerCase()}/productlist`)\r\n    } else {\r\n      if (!product.name || product.id != productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        console.log('here')\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n        setActive(product.active)\r\n        setCategoryId(product.category.id)\r\n      }\r\n    }\r\n  }, [dispatch, history, match, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/uploads', formData, config)\r\n\r\n      setImage(`/images/${data}`)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (userInfo.role === 'ADMIN') {\r\n      dispatch(\r\n        updateProduct({\r\n          id: productId,\r\n          name,\r\n          categoryId,\r\n          price,\r\n          image,\r\n          description,\r\n          countInStock,\r\n          active,\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        updateProduct({\r\n          id: productId,\r\n          name,\r\n          categoryId,\r\n          price,\r\n          image,\r\n          description,\r\n          countInStock,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`/${userInfo && userInfo.role.toLowerCase()}/productlist`}\r\n        className='btn btn-light my-3'\r\n      >\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                required\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Select Category</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                required\r\n                onChange={(e) => setCategoryId(e.target.options.selectedIndex)}\r\n              >\r\n                {categories &&\r\n                  categories.map((c) => <option key={c.id}>{c.name}</option>)}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                required\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                required\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                required\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                required\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                required\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* {userInfo.role === 'ADMIN' ? (\r\n              <Form.Group>\r\n                <Form.Label as='legend'>Change Status</Form.Label>\r\n                <Col>\r\n                  <Form.Check\r\n                    type='radio'\r\n                    label='Active'\r\n                    id='active'\r\n                    name='status'\r\n                    value='Active'\r\n                    onChange={setActive(true)}\r\n                  ></Form.Check>\r\n                  <Form.Check\r\n                    type='radio'\r\n                    label='Inactive'\r\n                    id='inactive'\r\n                    name='status'\r\n                    value='Inactive'\r\n                    onChange={setActive(false)}\r\n                  ></Form.Check>\r\n                </Col>\r\n              </Form.Group>\r\n            ) : (\r\n              <></>\r\n            )} */}\r\n\r\n            {userInfo && userInfo.role === 'ADMIN' ? (\r\n              <Form.Group controlId='status'>\r\n                <Form.Label>Status </Form.Label>\r\n                <ButtonGroup toggle>\r\n                  <ToggleButton\r\n                    key='0'\r\n                    type='radio'\r\n                    variant='secondary'\r\n                    name='radio'\r\n                    value='Active'\r\n                    checked={active}\r\n                    onChange={() => setActive(true)}\r\n                  >\r\n                    Active\r\n                  </ToggleButton>\r\n                  <ToggleButton\r\n                    key='1'\r\n                    type='radio'\r\n                    variant='secondary'\r\n                    name='radio'\r\n                    value='Inactive'\r\n                    checked={!active}\r\n                    onChange={() => setActive(false)}\r\n                  >\r\n                    Inactive\r\n                  </ToggleButton>\r\n                </ButtonGroup>\r\n              </Form.Group>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders, listVendorOrders } from '../actions/orderActions'\r\nimport { VENDOR_ORDER_LIST_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  console.log('here')\r\n  const dispatch = useDispatch()\r\n\r\n  const vendorOrderList = useSelector((state) => state.vendorOrderList)\r\n  const { loading, error, orders } = vendorOrderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: VENDOR_ORDER_LIST_RESET })\r\n    if (userInfo && userInfo.role === 'VENDOR') {\r\n      dispatch(listVendorOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ORDER ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>STATUS</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.id}>\r\n                <td>{order.id}</td>\r\n                <td>{order.user.username}</td>\r\n                <td>{order.order_created.split('T')[0]}</td>\r\n                <td>\r\n                  {addDecimals(\r\n                    order.listItemDTO.reduce(\r\n                      (acc, item) => acc + item.product.price * item.quantity,\r\n                      0\r\n                    ) * 1.07\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.payment.status === 'SUCCESS' ? (\r\n                    <Message variant='success'>Yes</Message>\r\n                  ) : (\r\n                    <Message variant='danger'>No</Message>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.status === 'RECEIVED' ? (\r\n                    <Message variant='warning'>Received</Message>\r\n                  ) : order.status === 'INPROGRESS' ? (\r\n                    <Message variant='primary'>In Progress</Message>\r\n                  ) : order.status === 'CANCELED' ? (\r\n                    <Message variant='danger'>Cancelled</Message>\r\n                  ) : order.status === 'SHIPPED' ? (\r\n                    <Message variant='info'>Shipped</Message>\r\n                  ) : order.status === 'DELIVERED' ? (\r\n                    <Message variant='success'>Delivered</Message>\r\n                  ) : order.status === 'PAID' ? (\r\n                    <Message variant='primary'>Paid</Message>\r\n                  ) : (\r\n                    <Message>Processing</Message>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order.id}`}>\r\n                    <Button className='btn-sm' variant='light'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nconst AdminOrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.role === 'ADMIN') {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ORDER ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>STATUS</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.id}>\r\n                <td>{order.id}</td>\r\n                <td>{order.user.username}</td>\r\n                <td>{order.order_created.split('T')[0]}</td>\r\n                <td>{order.total}</td>\r\n                <td>\r\n                  {order.status === 'PAID' || order.status == 'RECEIVED' ? (\r\n                    <Message variant='success'>Yes</Message>\r\n                  ) : (\r\n                    <Message variant='danger'>No</Message>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.status === 'RECEIVED' ? (\r\n                    <Message variant='warning'>Received</Message>\r\n                  ) : order.status === 'INPROGRESS' ? (\r\n                    <Message variant='primary'>In Progress</Message>\r\n                  ) : order.status === 'CANCELED' ? (\r\n                    <Message variant='danger'>Cancelled</Message>\r\n                  ) : order.status === 'SHIPPED' ? (\r\n                    <Message variant='info'>Shipped</Message>\r\n                  ) : order.status === 'DELIVERED' ? (\r\n                    <Message variant='success'>Delivered</Message>\r\n                  ) : order.status === 'PAID' ? (\r\n                    <Message variant='primary'>Paid</Message>\r\n                  ) : (\r\n                    <Message>Processing</Message>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order.id}`}>\r\n                    <Button className='btn-sm' variant='light'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminOrderListScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts, listProductsByCategory } from '../actions/productActions'\r\nimport { listCategory } from '../actions/categoryActions'\r\n\r\nconst CategoryHomeScreen = ({ match }) => {\r\n  const catId = match.params.catId\r\n  const keyword = match.params.keyword || ''\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productListByCategory = useSelector(\r\n    (state) => state.categoryProductList\r\n  )\r\n  const { loading, error, products, page, pages } = productListByCategory\r\n\r\n  const categoryList = useSelector((state) => state.categoryList)\r\n  const { categories } = categoryList\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      listProductsByCategory(catId, keyword === '@' ? '' : keyword, pageNumber)\r\n    )\r\n  }, [dispatch, catId, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n\r\n      <h1>Latest Products</h1>\r\n\r\n      <Navbar bg='light'>\r\n        <Nav className='mr-auto'>\r\n          <NavDropdown title='Browse Categories'>\r\n            {categories &&\r\n              categories.map((cat) => (\r\n                <NavDropdown.Item>\r\n                  <NavLink to={`/search/@/category/${cat.id}`}>\r\n                    {cat.name}\r\n                  </NavLink>\r\n                </NavDropdown.Item>\r\n              ))}\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products &&\r\n              products.map((product) => (\r\n                <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\r\n                  <Product product={product} />\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CategoryHomeScreen\r\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {\n  Table,\n  Badge,\n  Image,\n  Button,\n  Row,\n  Col,\n  Form,\n  ButtonGroup,\n  ToggleButton,\n  Card,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport { Link } from 'react-router-dom'\nimport FormContainer from '../components/FormContainer'\nimport { createProductsReport } from '../actions/productActions'\nimport { USER_LOGIN_RESET } from '../constants/userConstants'\nimport { PRODUCT_REPORT_RESET } from '../constants/productConstants'\nimport { Parser } from 'html-to-react'\n\nconst ReportScreen = ({ history, match }) => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const [from, setFrom] = useState('')\n  const [to, setTo] = useState('')\n\n  const productReport = useSelector((state) => state.productReport)\n  const { loading, error, report } = productReport\n\n  useEffect(() => {\n    if (report) {\n      console.log()\n    }\n    //dispatch({ type: PRODUCT_REPORT_RESET })\n    if (!userInfo && userInfo.role !== 'ADMIN') {\n      dispatch({ type: USER_LOGIN_RESET })\n      history.push('/login')\n    }\n  }, [history, userInfo, productReport])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (userInfo.role === 'ADMIN') {\n      dispatch(createProductsReport())\n    }\n  }\n  if (!userInfo || !userInfo.role === 'ADMIN') {\n    history.push('/login')\n  }\n\n  return (\n    <>\n      {userInfo.role === 'ADMIN' ? (\n        <FormContainer>\n          <h1>Report</h1>\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Message variant='danger'>{error}</Message>\n          ) : (\n            <Form onSubmit={submitHandler}>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label>Select Type</Form.Label>\n                  <Form.Control as='select' custom>\n                    <option>Product</option>\n                    <option>Orders</option>\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId='from'>\n                  <Form.Label>Form</Form.Label>\n                  <Form.Control\n                    type='date'\n                    placeholder='mm/dd/yy'\n                    value={from}\n                    onChange={(e) => setFrom(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId='to'>\n                  <Form.Label>To</Form.Label>\n                  <Form.Control\n                    type='date'\n                    placeholder='mm/dd/yy'\n                    value={to}\n                    onChange={(e) => setTo(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n                <Form.Group>\n                  <Button type='submit' variant='primary'>\n                    Submit\n                  </Button>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n          )}\n          {report ? (\n            <>\n              <Card>\n                <Card.Header>Generated Reports</Card.Header>\n                <Card.Text>\n                  {report.split('\\\\').slice(-1)[0]} generated in {report}\n                </Card.Text>\n              </Card>\n            </>\n          ) : (\n            <Card>\n              <Card.Header>No reports generated</Card.Header>\n            </Card>\n          )}\n        </FormContainer>\n      ) : (\n        <></>\n      )}\n    </>\n  )\n}\n\nexport default ReportScreen\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport BillingScreen from './screens/BillingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport AdminOrderListScreen from './screens/AdminOrderListScreen'\r\nimport CategoryHomeScreen from './screens/CategoryHomeScreen'\r\nimport ReportScreen from './screens/ReportScreen'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/billing' component={BillingScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/categories/:catId?' component={CategoryHomeScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/reports' component={ReportScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route\r\n            path='/admin/productlist'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/admin/productlist/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/admin/orderlist' component={AdminOrderListScreen} />\r\n          <Route\r\n            path='/vendor/productlist'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/vendor/productlist/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/vendor/product/:id/edit'\r\n            component={ProductEditScreen}\r\n          />\r\n          <Route path='/vendor/orderlist' component={OrderListScreen} />\r\n          <Route path='/search/:keyword' component={HomeScreen} exact />\r\n          <Route\r\n            path='/search/:keyword/category/:catId'\r\n            component={CategoryHomeScreen}\r\n            exact\r\n          />\r\n          <Route path='/category/:catId' component={CategoryHomeScreen} exact />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            component={HomeScreen}\r\n            exact\r\n          />\r\n\r\n          <Route path='/' component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}