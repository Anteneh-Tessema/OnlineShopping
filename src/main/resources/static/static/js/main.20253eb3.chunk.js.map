{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/categoryReducers.js","constants/categoryConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/categoryActions.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/BillingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/AdminOrderListScreen.js","screens/CategoryHomeScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","content","pages","totalPages","page","number","error","categoryList","categories","categoryProductList","vendorProductList","productDetails","product","success","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","productId","map","filter","billingAddress","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderListMy","orders","orderList","vendorOrderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","listCategory","dispatch","a","axios","get","data","response","message","SearchBox","history","useDispatch","useState","keyword","setKeyword","category","setCategory","useSelector","useEffect","Form","Group","controlId","Label","Control","as","size","onChange","e","target","options","selectedIndex","disabled","selected","c","key","id","name","onSubmit","preventDefault","trim","push","inline","value","placeholder","className","Button","variant","logout","removeItem","getUserDetails","getState","config","headers","Authorization","token","Header","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","username","Item","onClick","role","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","Img","src","image","Body","Title","Text","price","Message","children","Alert","Loader","Spinner","animation","width","height","margin","display","Paginate","isAdmin","Pagination","Array","keys","active","Meta","description","keywords","Helmet","listProducts","pageNumber","listProductDetails","updateProduct","put","HomeScreen","match","params","cat","sm","md","lg","xl","ProductScreen","qty","setQty","Image","alt","fluid","ListGroup","countInStock","addToCart","quantity","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","setUsername","password","setPassword","redirect","post","login","RegisterScreen","firstname","setFirstName","lastname","setLastName","email","setEmail","confirmPassword","setConfirmPassword","setRole","setMessage","register","Check","label","listMyOrders","ProfileScreen","loadingOrders","errorOrders","updateUserProfile","Table","striped","bordered","hover","responsive","_id","order_created","total","status","CheckoutSteps","step1","step2","step3","step4","step5","ShippingScreen","address","setAddress","setStateAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","BillingScreen","PaymentScreen","usePaymentInputs","meta","getCardImageProps","getCardNumberProps","getExpiryDateProps","getCVCProps","method","setMethod","cardNumber","setCardNumber","expiryDate","setExpiryDate","cvc","setCVC","console","log","checked","images","cardType","displayName","isTouched","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","totalPrice","index","createOrder","OrderScreen","orderId","listItemDTO","href","payment","slice","shippingCost","tax","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","UserEditScreen","userId","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","listVendorProducts","toLowerCase","deleteProduct","Badge","pill","ProductEditScreen","setName","categoryId","setCategoryId","setPrice","setImage","setCountInStock","setDescription","setActive","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","File","custom","ButtonGroup","toggle","ToggleButton","OrderListScreen","AdminOrderListScreen","CategoryHomeScreen","catId","productListByCategory","listProductsByCategory","App","path","component","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.20253eb3.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n  vendorProductListReducer,\r\n  categoryProductListReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  vendorOrderListReducer,\r\n} from './reducers/orderReducers'\r\nimport { categoryListReducer } from './reducers/categoryReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  categoryList: categoryListReducer,\r\n  categoryProductList: categoryProductListReducer,\r\n  vendorProductList: vendorProductListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  vendorOrderList: vendorOrderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst billingAddressFromStorage = localStorage.getItem('billingAddress')\r\n  ? JSON.parse(localStorage.getItem('billingAddress'))\r\n  : {}\r\n\r\nconst paymentMethodFrontStorage = localStorage.getItem('paymentMethod')\r\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    billingAddress: billingAddressFromStorage,\r\n    paymentMethod: paymentMethodFrontStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  VENDOR_PRODUCT_LIST_REQUEST,\r\n  VENDOR_PRODUCT_LIST_SUCCESS,\r\n  VENDOR_PRODUCT_LIST_FAIL,\r\n  CATEGORY_PRODUCT_LIST_REQUEST,\r\n  CATEGORY_PRODUCT_LIST_SUCCESS,\r\n  CATEGORY_PRODUCT_LIST_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.content,\r\n        pages: action.payload.totalPages,\r\n        page: action.payload.number,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const categoryProductListReducer = (\r\n  state = { products: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CATEGORY_PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case CATEGORY_PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.content,\r\n        pages: action.payload.totalPages,\r\n        page: action.payload.number,\r\n      }\r\n    case CATEGORY_PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const vendorProductListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case VENDOR_PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case VENDOR_PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.content,\r\n        pages: action.payload.totalPages,\r\n        page: action.payload.number,\r\n      }\r\n    case VENDOR_PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const CATEGORY_PRODUCT_LIST_REQUEST = 'CATEGORY_PRODUCT_LIST_REQUEST'\r\nexport const CATEGORY_PRODUCT_LIST_SUCCESS = 'CATEGORY_PRODUCT_LIST_SUCCESS'\r\nexport const CATEGORY_PRODUCT_LIST_FAIL = 'CATEGORY_PRODUCT_LIST_FAIL'\r\n\r\nexport const VENDOR_PRODUCT_LIST_REQUEST = 'VENDOR_PRODUCT_LIST_REQUEST'\r\nexport const VENDOR_PRODUCT_LIST_SUCCESS = 'VENDOR_PRODUCT_LIST_SUCCESS'\r\nexport const VENDOR_PRODUCT_LIST_FAIL = 'VENDOR_PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","import {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_CREATE_RESET,\r\n  CATEGORY_CREATE_FAIL,\r\n  CATEGORY_CREATE_SUCCESS,\r\n  CATEGORY_CREATE_REQUEST,\r\n  CATEGORY_UPDATE_REQUEST,\r\n  CATEGORY_UPDATE_SUCCESS,\r\n  CATEGORY_UPDATE_FAIL,\r\n  CATEGORY_UPDATE_RESET,\r\n} from '../constants/categoryConstants'\r\n\r\nexport const categoryListReducer = (state = { categories: [] }, action) => {\r\n  switch (action.type) {\r\n    case CATEGORY_LIST_REQUEST:\r\n      return { loading: true, categories: [] }\r\n    case CATEGORY_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        categories: action.payload,\r\n      }\r\n    case CATEGORY_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CATEGORY_LIST_REQUEST = 'CATEGORY_LIST_REQUEST'\r\nexport const CATEGORY_LIST_SUCCESS = 'CATEGORY_LIST_SUCCESS'\r\nexport const CATEGORY_LIST_FAIL = 'CATEGORY_LIST_FAIL'\r\nexport const CATEGORY_LIST_RESET = 'CATEGORY_LIST_RESET'\r\n\r\nexport const CATEGORY_CREATE_REQUEST = 'CATEGORY_CREATE_REQUEST'\r\nexport const CATEGORY_CREATE_SUCCESS = 'CATEGORY_CREATE_SUCCESS'\r\nexport const CATEGORY_CREATE_FAIL = 'CATEGORY_CREATE_FAIL'\r\nexport const CATEGORY_CREATE_RESET = 'CATEGORY_CREATE_RESET'\r\n\r\nexport const CATEGORY_UPDATE_REQUEST = 'CATEGORY_UPDATE_REQUEST'\r\nexport const CATEGORY_UPDATE_SUCCESS = 'CATEGORY_UPDATE_SUCCESS'\r\nexport const CATEGORY_UPDATE_FAIL = 'CATEGORY_UPDATE_FAIL'\r\nexport const CATEGORY_UPDATE_RESET = 'CATEGORY_UPDATE_RESET'\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_BILLING_ADDRESS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find(\r\n        (x) => x.productId === item.productId\r\n      )\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.productId === existItem.productId ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (x) => x.productId !== action.payload\r\n        ),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n\r\n    case CART_SAVE_BILLING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        billingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_BILLING_ADDRESS = 'CART_SAVE_BILLING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  VENDOR_ORDER_LIST_REQUEST,\r\n  VENDOR_ORDER_LIST_FAIL,\r\n  VENDOR_ORDER_LIST_SUCCESS,\r\n  VENDOR_ORDER_LIST_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n\r\n    case ORDER_CREATE_RESET:\r\n      return {\r\n        state: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const vendorOrderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case VENDOR_ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case VENDOR_ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case VENDOR_ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case VENDOR_ORDER_LIST_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const VENDOR_ORDER_LIST_REQUEST = 'VENDOR_ORDER_LIST_REQUEST'\r\nexport const VENDOR_ORDER_LIST_SUCCESS = 'VENDOR_ORDER_LIST_SUCCESS'\r\nexport const VENDOR_ORDER_LIST_FAIL = 'VENDOR_ORDER_LIST_FAIL'\r\nexport const VENDOR_ORDER_LIST_RESET = 'VENDOR_ORDER_LIST_RESET'\r\n","import axios from 'axios'\r\nimport {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_DELETE_SUCCESS,\r\n  CATEGORY_DELETE_REQUEST,\r\n  CATEGORY_DELETE_FAIL,\r\n  CATEGORY_CREATE_REQUEST,\r\n  CATEGORY_CREATE_SUCCESS,\r\n  CATEGORY_CREATE_FAIL,\r\n  CATEGORY_UPDATE_REQUEST,\r\n  CATEGORY_UPDATE_SUCCESS,\r\n  CATEGORY_UPDATE_FAIL,\r\n} from '../constants/categoryConstants'\r\n\r\nexport const listCategory = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/category`)\r\n\r\n    dispatch({\r\n      type: CATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, NavDropdown } from 'react-bootstrap'\r\nimport { listCategory } from '../actions/categoryActions'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const [keyword, setKeyword] = useState('')\r\n  const [category, setCategory] = useState('')\r\n\r\n  //TODO Categories\r\n  const categoryList = useSelector((state) => state.categoryList)\r\n  const { categories } = categoryList\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategory())\r\n  }, [dispatch])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}/category/${category ? category : 0}`)\r\n    } else {\r\n      history.push(`/search/@/category/${category ? category : 0}`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form.Group controlId='category'>\r\n        <Form.Label></Form.Label>\r\n        <Form.Control\r\n          as='select'\r\n          size='sm'\r\n          onChange={(e) => setCategory(e.target.options.selectedIndex)}\r\n        >\r\n          <option disabled selected>\r\n            Select Category\r\n          </option>\r\n          {categories &&\r\n            categories.map((c) => <option key={c.id}>{c.name}</option>)}\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form onSubmit={submitHandler} inline>\r\n        <Form.Control\r\n          type='text'\r\n          name='q'\r\n          onChange={(e) => setKeyword(e.target.value)}\r\n          placeholder='Search Products...'\r\n          className='mr-sm-2 ml-sm-5'\r\n        ></Form.Control>\r\n        <Button type='submit' variant='outline-success' className='p-2'>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      null,\r\n      {\r\n        params: {\r\n          username,\r\n          password,\r\n        },\r\n      },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (\r\n  firstname,\r\n  lastname,\r\n  email,\r\n  username,\r\n  password,\r\n  role\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/register',\r\n      { firstname, lastname, email, username, password, role },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${userInfo.id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\nimport { listCategory } from '../actions/categoryActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Apple Shop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.username} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.role === 'ADMIN' && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n              {userInfo && userInfo.role === 'VENDOR' && (\r\n                <NavDropdown title='Vendor' id='vendormenu'>\r\n                  <LinkContainer to='/vendor/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/vendor/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; AppleShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product.id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product.id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page + 1}>\r\n              {x + 1}\r\n            </Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To ProShop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electroincs',\r\n}\r\n\r\nexport default Meta\r\n","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  VENDOR_PRODUCT_LIST_REQUEST,\r\n  VENDOR_PRODUCT_LIST_FAIL,\r\n  VENDOR_PRODUCT_LIST_SUCCESS,\r\n  CATEGORY_PRODUCT_LIST_REQUEST,\r\n  CATEGORY_PRODUCT_LIST_SUCCESS,\r\n  CATEGORY_PRODUCT_LIST_FAIL,\r\n} from '../constants/productConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductsByCategory = (\r\n  catId,\r\n  keyword = '',\r\n  pageNumber = ''\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products/categories/${catId}?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listVendorProducts = (id, pageNumber = '') => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: VENDOR_PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products/vendors/${id}?pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: VENDOR_PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: VENDOR_PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/products`, product, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\nimport { listCategory } from '../actions/categoryActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const categoryList = useSelector((state) => state.categoryList)\r\n  const { categories } = categoryList\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategory())\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n\r\n      <h1>Latest Products</h1>\r\n\r\n      <Navbar bg='light'>\r\n        <Nav className='mr-auto'>\r\n          <NavDropdown title='Browse Categories'>\r\n            {categories &&\r\n              categories.map((cat) => (\r\n                <NavDropdown.Item>\r\n                  <NavLink to={`/search/@/category/${cat.id}`}>\r\n                    {cat.name}\r\n                  </NavLink>\r\n                </NavDropdown.Item>\r\n              ))}\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products &&\r\n              products.map((product) => (\r\n                <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\r\n                  <Product product={product} />\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails } from '../actions/productActions'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                {product && product.category ? (\r\n                  <ListGroup.Item>\r\n                    <Link to={`/categories/${product.category.id}`}>\r\n                      <Card.Text as='h8'>{product.category.name}</Card.Text>\r\n                    </Link>\r\n                  </ListGroup.Item>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_BILLING_ADDRESS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      productId: data.id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      quantity: qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const saveBillingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_BILLING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('billingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const quantity = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, quantity))\r\n    }\r\n  }, [dispatch, productId, quantity])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    if (userInfo && userInfo.role === 'CLIENT') {\r\n      history.push('/login?redirect=shipping')\r\n    }\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.productId}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.productId}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.quantity}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.productId, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.productId)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal (\r\n                {cartItems.reduce((acc, item) => acc + item.quantity, 0)}) items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.quantity * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            {userInfo && userInfo.role !== 'CLIENT' ? (\r\n              <Message>\r\n                Please login from a client account <Link to='/'>Go Back</Link>\r\n              </Message>\r\n            ) : (\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  Proceed To Checkout\r\n                </Button>\r\n              </ListGroup.Item>\r\n            )}\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={8}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(username, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter Usernmae'\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [firstname, setFirstName] = useState('')\r\n  const [lastname, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [role, setRole] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(firstname, lastname, email, username, password, role))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='firstname'>\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter Firstname'\r\n            value={firstname}\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='lastname'>\r\n          <Form.Label>Last Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter Last Name'\r\n            value={lastname}\r\n            onChange={(e) => setLastName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='username'>\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Username'\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password Address</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Account Type</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Vendor'\r\n              id='vendor'\r\n              name='role'\r\n              value='VENDOR'\r\n              onChange={(e) => setRole(e.target.value)}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Client'\r\n              id='client'\r\n              name='role'\r\n              value='CLIENT'\r\n              onChange={(e) => setRole(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/signin'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import axios from 'axios'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  VENDOR_ORDER_LIST_REQUEST,\r\n  VENDOR_ORDER_LIST_SUCCESS,\r\n  VENDOR_ORDER_LIST_FAIL,\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listVendorOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: VENDOR_ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/vendors`, config)\r\n\r\n    dispatch({\r\n      type: VENDOR_ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: VENDOR_ORDER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [firstname, setFirstName] = useState('')\r\n  const [lastname, setLastName] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    dispatch(listMyOrders())\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.username) {\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setFirstName(user.firstname)\r\n        setLastName(user.lastname)\r\n        setUsername(user.username)\r\n        setEmail(user.email)\r\n        setPassword(user.password)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user.id,\r\n          firstname,\r\n          lastname,\r\n          username,\r\n          email,\r\n          password,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='firstname'>\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Firstname'\r\n                value={firstname}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='lastname'>\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Lastname'\r\n                value={lastname}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='username'>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Username'\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>STATUS</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order.id}</td>\r\n                  <td>{order.order_created.split('T')[0]}</td>\r\n                  <td>{order.total}</td>\r\n                  <td>\r\n                    {order.status === 'PAID' ? (\r\n                      <Message variant='success'>Yes</Message>\r\n                    ) : (\r\n                      <Message variant='danger'>No</Message>\r\n                    )}\r\n                  </td>\r\n                  <td>{order.status}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order.id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4, step5 }) => {\r\n  return (\r\n    <Nav className='justify-content-center' variant='pills'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/billing'>\r\n            <Nav.Link>Billing</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Billing</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step5 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport SelectUSState from 'react-select-us-states'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [firstname, setFirstName] = useState(shippingAddress.firstname)\r\n  const [lastname, setLastName] = useState(shippingAddress.lastname)\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [state, setStateAddress] = useState(shippingAddress.state)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login?redirect=shipping')\r\n    }\r\n    if (userInfo && userInfo.role !== 'CLIENT') {\r\n      history.push('/')\r\n    }\r\n  }, [userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      saveShippingAddress({\r\n        firstname,\r\n        lastname,\r\n        address,\r\n        city,\r\n        state,\r\n        postalCode,\r\n        country,\r\n      })\r\n    )\r\n    history.push('/billing')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='firstname'>\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter FirstName'\r\n            value={firstname}\r\n            required\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='lastname'>\r\n          <Form.Label>Last Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter LastName'\r\n            value={lastname}\r\n            required\r\n            onChange={(e) => setLastName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='state'>\r\n          <Form.Label>State </Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter State'\r\n            value={state}\r\n            required\r\n            onChange={(e) => setStateAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport SelectUSState from 'react-select-us-states'\r\nimport { saveBillingAddress } from '../actions/cartActions'\r\n\r\nconst BillingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { billingAddress } = cart\r\n\r\n  const [firstname, setFirstName] = useState(billingAddress.firstname)\r\n  const [lastname, setLastName] = useState(billingAddress.lastname)\r\n  const [address, setAddress] = useState(billingAddress.address)\r\n  const [state, setStateAddress] = useState(billingAddress.state)\r\n  const [city, setCity] = useState(billingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(billingAddress.postalCode)\r\n  const [country, setCountry] = useState(billingAddress.country)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login?redirect=billing')\r\n    }\r\n    if (userInfo && userInfo.role !== 'CLIENT') {\r\n      history.push('/')\r\n    }\r\n  }, [userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      saveBillingAddress({\r\n        firstname,\r\n        lastname,\r\n        address,\r\n        city,\r\n        state,\r\n        postalCode,\r\n        country,\r\n      })\r\n    )\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Billing</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='firstname'>\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter FirstName'\r\n            value={firstname}\r\n            required\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='lastname'>\r\n          <Form.Label>Last Name</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter LastName'\r\n            value={lastname}\r\n            required\r\n            onChange={(e) => setLastName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='state'>\r\n          <Form.Label>State </Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter State'\r\n            value={state}\r\n            required\r\n            onChange={(e) => setStateAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default BillingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport { usePaymentInputs } from 'react-payment-inputs'\r\nimport images from 'react-payment-inputs/images'\r\nimport Message from '../components/Message'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress, paymentMethod } = cart\r\n  const {\r\n    meta,\r\n    getCardImageProps,\r\n    getCardNumberProps,\r\n    getExpiryDateProps,\r\n    getCVCProps,\r\n  } = usePaymentInputs()\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [method, setMethod] = useState('')\r\n  const [cardNumber, setCardNumber] = useState('')\r\n  const [expiryDate, setExpiryDate] = useState('')\r\n  const [cvc, setCVC] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login?redirect=payment')\r\n    }\r\n    if (userInfo && userInfo.role !== 'CLIENT') {\r\n      history.push('/')\r\n    }\r\n  }, [userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (!meta.error) {\r\n      dispatch(\r\n        savePaymentMethod({\r\n          method,\r\n          cardNumber,\r\n          expiryDate,\r\n          cvc,\r\n        })\r\n      )\r\n      history.push('/placeorder')\r\n    }\r\n    console.log('here')\r\n  }\r\n\r\n  const checkCardType = () => {\r\n    if (meta && meta.cardType) {\r\n      setMethod(meta.cardType.displayName)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='payment'>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Mastercard'\r\n              id='mastercard'\r\n              name='method'\r\n              value='Mastercard'\r\n              checked={method == 'Mastercard'}\r\n              onChange={(e) => setMethod(e.target.value)}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Visa'\r\n              id='visa'\r\n              name='method'\r\n              value='Visa'\r\n              checked={method === 'Visa'}\r\n              required\r\n              onChange={(e) => setMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Card Number</Form.Label>{' '}\r\n          <svg {...getCardImageProps({ images })} />\r\n          <Form.Control\r\n            type='number'\r\n            placeholder='Enter card Number'\r\n            required\r\n            {...getCardNumberProps({\r\n              onChange: (e) => {\r\n                setCardNumber(e.target.value)\r\n                checkCardType()\r\n              },\r\n            })}\r\n            value={cardNumber}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Expiration Date</Form.Label>\r\n          <Form.Control\r\n            type='number'\r\n            placeholder='Enter Expiration Date'\r\n            required\r\n            {...getExpiryDateProps({\r\n              onChange: (e) => setExpiryDate(e.target.value),\r\n            })}\r\n            value={expiryDate}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>CVV</Form.Label>\r\n          <Form.Control\r\n            type='number'\r\n            placeholder='Enter CVV'\r\n            {...getCVCProps({ onChange: (e) => setCVC(e.target.value) })}\r\n            value={cvc}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {meta.isTouched && meta.error ? <Message>{meta.error}</Message> : <></>}\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 25 : 10)\r\n  cart.taxPrice = addDecimals(Number((0.07 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch({ type: ORDER_CREATE_RESET })\r\n      history.push(`/order/${order.id}`)\r\n    }\r\n    if (!userInfo) {\r\n      history.push('/login?redirect=placeOrder')\r\n    }\r\n    if (userInfo && userInfo.role !== 'CLIENT') {\r\n      history.push('/')\r\n    }\r\n  }, [history, success, userInfo])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        billingAddress: cart.billingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 step5 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\r\n                {cart.shippingAddress.state} {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod.method}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.productId}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.quantity} x ${item.price} = $\r\n                          {(item.quantity * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails } from '../actions/orderActions'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.listItemDTO.reduce(\r\n        (acc, item) => acc + item.product.price * item.quantity,\r\n        0\r\n      )\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (order && userInfo && userInfo.id !== order.user.id) {\r\n      history.push('/')\r\n    }\r\n    if (!userInfo) {\r\n      history.push(`/login?redirect=order/${orderId}`)\r\n    }\r\n\r\n    if (!order || order.id != orderId) {\r\n      dispatch(getOrderDetails(orderId))\r\n    }\r\n    if (userInfo && userInfo.role === 'VENDOR') {\r\n      history.push('/')\r\n    }\r\n  }, [dispatch, orderId, order, userInfo])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order.id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.firstname}{' '}\r\n                {order.user.lastname}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Status</h2>\r\n\r\n              {order.status === 'RECEIVED' ? (\r\n                <Message variant='warning'>Received</Message>\r\n              ) : order.status === 'INPROGRESS' ? (\r\n                <Message variant='primary'>In Progress</Message>\r\n              ) : order.status === 'CANCELED' ? (\r\n                <Message variant='danger'>Cancelled</Message>\r\n              ) : order.status === 'SHIPPED' ? (\r\n                <Message variant='info'>Shipped</Message>\r\n              ) : order.status === 'DELIVERED' ? (\r\n                <Message variant='success'>Delivered</Message>\r\n              ) : order.status === 'PAID' ? (\r\n                <Message variant='primary'>Paid</Message>\r\n              ) : (\r\n                <Message> No Status Available</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.payment.method} ending in{' '}\r\n                {order.payment.cardNumber.slice(\r\n                  order.payment.cardNumber.length - 4\r\n                )}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.listItemDTO.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.listItemDTO.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.product.image}\r\n                            alt={item.product.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product.id}`}>\r\n                            {item.product.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.quantity} x ${item.product.price} = $\r\n                          {item.quantity * item.product.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.price}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingCost}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.tax}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.total}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const id = userInfo.id\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.role === 'ADMIN') {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>\r\n                  {user.firstname} {user.lastname}\r\n                </td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.role === 'ADMIN' ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {/* <LinkContainer to={`/admin/user/${user.id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer> */}\r\n                  {id !== user.id ? (\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(user.id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.username || user.id != userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setUsername(user.username)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ id: userId, username, email }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Username'\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Badge, Image, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n  listVendorProducts,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  const productList = useSelector((state) => state.productList)\r\n  const vendorProductList = useSelector((state) => state.vendorProductList)\r\n\r\n  let loading,\r\n    error,\r\n    products,\r\n    page,\r\n    pages = ''\r\n\r\n  if (userInfo && userInfo.role === 'VENDOR') {\r\n    ;({ loading, error, products, page, pages } = vendorProductList)\r\n  } else {\r\n    ;({ loading, error, products, page, pages } = productList)\r\n  }\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n    if (userInfo && userInfo.role === 'VENDOR') {\r\n      dispatch(listVendorProducts(userInfo.id, pageNumber))\r\n\r\n      if (successCreate) {\r\n        history.push(\r\n          `/${userInfo.role.toLowerCase()}/product/${createdProduct.id}/edit`\r\n        )\r\n      }\r\n    } else if (userInfo && userInfo.role === 'ADMIN') {\r\n      dispatch(listProducts('', pageNumber))\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        {userInfo && userInfo.role === 'VENDOR' ? (\r\n          <Col className='text-right'>\r\n            <Button className='my-3' onClick={createProductHandler}>\r\n              <i className='fas fa-plus'></i> Create Product\r\n            </Button>\r\n          </Col>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>CATEGORY</th>\r\n                <th>PRICE</th>\r\n                <th>IMAGE</th>\r\n                <th>DESCRIPTION</th>\r\n                <th>STATUS</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product.id}>\r\n                  <td>{product.id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.category.name}</td>\r\n                  <td>${product.price}</td>\r\n\r\n                  <td>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Image\r\n                          src={product.image}\r\n                          alt={product.name}\r\n                          fluid\r\n                          rounded\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </td>\r\n                  <td>{product.description}</td>\r\n                  <td>\r\n                    {product.active ? (\r\n                      <Badge pill variant='success'>\r\n                        Active\r\n                      </Badge>\r\n                    ) : (\r\n                      <Badge pill variant='danger'>\r\n                        Inactive\r\n                      </Badge>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer\r\n                      to={`/${\r\n                        userInfo && userInfo.role.toLowerCase()\r\n                      }/product/${product.id}/edit`}\r\n                    >\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product.id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            isAdmin={\r\n              userInfo &&\r\n              (userInfo.role === 'ADMIN' || userInfo.role === 'VENDOR')\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Col, ButtonGroup, ToggleButton } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport { listCategory } from '../actions/categoryActions'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [categoryId, setCategoryId] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [active, setActive] = useState(false)\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const categoryList = useSelector((state) => state.categoryList)\r\n  const { categories } = categoryList\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategory())\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push(`/${userInfo.role.toLowerCase()}/productlist`)\r\n    } else {\r\n      if (!product.name || product.id != productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        console.log('here')\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n        setActive(product.active)\r\n        setCategoryId(product.category.id)\r\n      }\r\n    }\r\n  }, [dispatch, history, match, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/uploads', formData, config)\r\n\r\n      setImage(`/images/${data}`)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (userInfo.role === 'ADMIN') {\r\n      dispatch(\r\n        updateProduct({\r\n          id: productId,\r\n          name,\r\n          categoryId,\r\n          price,\r\n          image,\r\n          description,\r\n          countInStock,\r\n          active,\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        updateProduct({\r\n          id: productId,\r\n          name,\r\n          categoryId,\r\n          price,\r\n          image,\r\n          description,\r\n          countInStock,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`/${userInfo && userInfo.role.toLowerCase()}/productlist`}\r\n        className='btn btn-light my-3'\r\n      >\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Select Category</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                onChange={(e) => setCategoryId(e.target.options.selectedIndex)}\r\n              >\r\n                {categories &&\r\n                  categories.map((c) => <option key={c.id}>{c.name}</option>)}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* {userInfo.role === 'ADMIN' ? (\r\n              <Form.Group>\r\n                <Form.Label as='legend'>Change Status</Form.Label>\r\n                <Col>\r\n                  <Form.Check\r\n                    type='radio'\r\n                    label='Active'\r\n                    id='active'\r\n                    name='status'\r\n                    value='Active'\r\n                    onChange={setActive(true)}\r\n                  ></Form.Check>\r\n                  <Form.Check\r\n                    type='radio'\r\n                    label='Inactive'\r\n                    id='inactive'\r\n                    name='status'\r\n                    value='Inactive'\r\n                    onChange={setActive(false)}\r\n                  ></Form.Check>\r\n                </Col>\r\n              </Form.Group>\r\n            ) : (\r\n              <></>\r\n            )} */}\r\n\r\n            {userInfo && userInfo.role === 'ADMIN' ? (\r\n              <Form.Group controlId='status'>\r\n                <Form.Label>Status </Form.Label>\r\n                <ButtonGroup toggle>\r\n                  <ToggleButton\r\n                    key='0'\r\n                    type='radio'\r\n                    variant='secondary'\r\n                    name='radio'\r\n                    value='Active'\r\n                    checked={active}\r\n                    onChange={() => setActive(true)}\r\n                  >\r\n                    Active\r\n                  </ToggleButton>\r\n                  <ToggleButton\r\n                    key='1'\r\n                    type='radio'\r\n                    variant='secondary'\r\n                    name='radio'\r\n                    value='Inactive'\r\n                    checked={!active}\r\n                    onChange={() => setActive(false)}\r\n                  >\r\n                    Inactive\r\n                  </ToggleButton>\r\n                </ButtonGroup>\r\n              </Form.Group>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders, listVendorOrders } from '../actions/orderActions'\r\nimport { VENDOR_ORDER_LIST_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  console.log('here')\r\n  const dispatch = useDispatch()\r\n\r\n  const vendorOrderList = useSelector((state) => state.vendorOrderList)\r\n  const { loading, error, orders } = vendorOrderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: VENDOR_ORDER_LIST_RESET })\r\n    if (userInfo && userInfo.role === 'VENDOR') {\r\n      dispatch(listVendorOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ORDER ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>STATUS</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.id}>\r\n                <td>{order.id}</td>\r\n                <td>{order.user.username}</td>\r\n                <td>{order.order_created.split('T')[0]}</td>\r\n                <td>\r\n                  {addDecimals(\r\n                    order.listItemDTO.reduce(\r\n                      (acc, item) => acc + item.product.price * item.quantity,\r\n                      0\r\n                    ) * 1.07\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.payment.status === 'SUCCESS' ? (\r\n                    <Message variant='success'>Yes</Message>\r\n                  ) : (\r\n                    <Message variant='danger'>No</Message>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.status === 'RECEIVED' ? (\r\n                    <Message variant='warning'>Received</Message>\r\n                  ) : order.status === 'INPROGRESS' ? (\r\n                    <Message variant='primary'>In Progress</Message>\r\n                  ) : order.status === 'CANCELED' ? (\r\n                    <Message variant='danger'>Cancelled</Message>\r\n                  ) : order.status === 'SHIPPED' ? (\r\n                    <Message variant='info'>Shipped</Message>\r\n                  ) : order.status === 'DELIVERED' ? (\r\n                    <Message variant='success'>Delivered</Message>\r\n                  ) : order.status === 'PAID' ? (\r\n                    <Message variant='primary'>Paid</Message>\r\n                  ) : (\r\n                    <Message>Processing</Message>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order.id}`}>\r\n                    <Button className='btn-sm' variant='light'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nconst AdminOrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.role === 'ADMIN') {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ORDER ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>STATUS</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.id}>\r\n                <td>{order.id}</td>\r\n                <td>{order.user.username}</td>\r\n                <td>{order.order_created.split('T')[0]}</td>\r\n                <td>{order.total}</td>\r\n                <td>\r\n                  {order.status === 'PAID' || order.status == 'RECEIVED' ? (\r\n                    <Message variant='success'>Yes</Message>\r\n                  ) : (\r\n                    <Message variant='danger'>No</Message>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.status === 'RECEIVED' ? (\r\n                    <Message variant='warning'>Received</Message>\r\n                  ) : order.status === 'INPROGRESS' ? (\r\n                    <Message variant='primary'>In Progress</Message>\r\n                  ) : order.status === 'CANCELED' ? (\r\n                    <Message variant='danger'>Cancelled</Message>\r\n                  ) : order.status === 'SHIPPED' ? (\r\n                    <Message variant='info'>Shipped</Message>\r\n                  ) : order.status === 'DELIVERED' ? (\r\n                    <Message variant='success'>Delivered</Message>\r\n                  ) : order.status === 'PAID' ? (\r\n                    <Message variant='primary'>Paid</Message>\r\n                  ) : (\r\n                    <Message>Processing</Message>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order.id}`}>\r\n                    <Button className='btn-sm' variant='light'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminOrderListScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts, listProductsByCategory } from '../actions/productActions'\r\nimport { listCategory } from '../actions/categoryActions'\r\n\r\nconst CategoryHomeScreen = ({ match }) => {\r\n  const catId = match.params.catId\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productListByCategory = useSelector(\r\n    (state) => state.categoryProductList\r\n  )\r\n  const { loading, error, products, page, pages } = productListByCategory\r\n\r\n  const categoryList = useSelector((state) => state.categoryList)\r\n  const { categories } = categoryList\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      listProductsByCategory(catId, keyword === '@' ? '' : keyword, pageNumber)\r\n    )\r\n  }, [dispatch, catId, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n\r\n      <h1>Latest Products</h1>\r\n\r\n      <Navbar bg='light'>\r\n        <Nav className='mr-auto'>\r\n          <NavDropdown title='Browse Categories'>\r\n            {categories &&\r\n              categories.map((cat) => (\r\n                <NavDropdown.Item>\r\n                  <NavLink to={`/search/@/category/${cat.id}`}>\r\n                    {cat.name}\r\n                  </NavLink>\r\n                </NavDropdown.Item>\r\n              ))}\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products &&\r\n              products.map((product) => (\r\n                <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\r\n                  <Product product={product} />\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CategoryHomeScreen\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport BillingScreen from './screens/BillingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport AdminOrderListScreen from './screens/AdminOrderListScreen'\r\nimport CategoryHomeScreen from './screens/CategoryHomeScreen'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/billing' component={BillingScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route\r\n            path='/categories/:categoryId?'\r\n            component={CategoryHomeScreen}\r\n          />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route\r\n            path='/admin/productlist'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/admin/productlist/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/admin/orderlist' component={AdminOrderListScreen} />\r\n          <Route\r\n            path='/vendor/productlist'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/vendor/productlist/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/vendor/product/:id/edit'\r\n            component={ProductEditScreen}\r\n          />\r\n          <Route path='/vendor/orderlist' component={OrderListScreen} />\r\n          <Route path='/search/:keyword' component={HomeScreen} exact />\r\n          <Route\r\n            path='/search/:keyword/category/:catId'\r\n            component={CategoryHomeScreen}\r\n            exact\r\n          />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            component={HomeScreen}\r\n            exact\r\n          />\r\n          <Route path='/' component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}